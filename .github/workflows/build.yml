name: Build (Nuitka + UPX)

on:
  workflow_dispatch:
  push:
    tags: ["v*"]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"   # adjust if you need a specific version
          cache: "pip"
          cache-dependency-path: |
            requirements.txt

      - name: Install Nuitka and deps
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          pip install -U nuitka zstandard ordered-set
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          python -V
          python -m nuitka --version

      - name: Download UPX
        shell: powershell
        run: |
          $UPX_VERSION = "5.0.2"  # bump when needed
          $zip = "$env:RUNNER_TEMP\upx.zip"
          $dst = "C:\UPX"
          Invoke-WebRequest -Uri "https://github.com/upx/upx/releases/download/v$UPX_VERSION/upx-$UPX_VERSION-win64.zip" -OutFile $zip
          Expand-Archive -Path $zip -DestinationPath "$env:RUNNER_TEMP\upx" -Force
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          Copy-Item "$env:RUNNER_TEMP\upx\upx-$UPX_VERSION-win64\upx.exe" $dst -Force
          echo "UPX_BIN=$dst" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Build with Nuitka + UPX
        shell: bash
        run: |
          python -m nuitka \
            --jobs=4 \
            --enable-plugin=upx \
            --upx-binary="$UPX_BIN" \
            --enable-plugin=multiprocessing \
            --lto=yes \
            --enable-plugin=tk-inter \
            --windows-console-mode=disable \
            --follow-imports \
            --windows-icon-from-ico="icon.png" \
            --include-data-files=icon.png=icon.png \
            --python-flag=no_site,no_asserts,no_docstrings \
            --onefile \
            --standalone \
            --msvc=latest \
            --assume-yes-for-downloads \
            --output-filename=Batch-Folder-Renamer \
            main.py


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Batch-Folder-Renamer
          path: |
            Batch-Folder-Renamer.exe
            main.build/**
          include-hidden-files: true
